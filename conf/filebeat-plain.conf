input {
    beats {
        port => 5045
        type => "filebeat"
    }
}

filter {
  #If log line contains tab character followed by 'at' then we will tag that entry as stacktrace
    if [message] =~ "\tat" {
      grok {
        match => ["message", "^(\tat)"]
        add_tag => ["stacktrace"]
      }
    }

  #Grokking Spring Boot's Sleuth and default log format
  grok {
    patterns_dir => ["/etc/logstash/conf.d/patterns"]
    named_captures_only => true
    match => {
        "message" => [
            "%{SB_LAYOUT}: %{METRIC_MSG:message}",
            "%{SB_LAYOUT}: %{GREEDYDATA:message}"
        ]
    }
    overwrite => [ "message" ]
  }

  #Parsing out timestamps which are in timestamp field thanks to previous grok section
  date {
    match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
    timezone => [ "Europe/Rome" ]
  }
  mutate {
    convert => {
        "export" => "boolean"
        "elapsed_in_ms" => "integer"
        "status" => "integer"
    }
  }
}


output {
    elasticsearch {
        hosts => ["localhost"]
        index => "plain-%{service_name}-%{+yyyy.MM.dd}"
    }
    stdout {
        codec => rubydebug
    }
}